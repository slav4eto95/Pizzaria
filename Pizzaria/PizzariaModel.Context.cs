//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pizzaria
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PizzariaEntities : DbContext
    {
        public PizzariaEntities()
            : base("name=PizzariaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<ClientsWithoutOrders_Result> ClientsWithoutOrders(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientsWithoutOrders_Result>("ClientsWithoutOrders", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ClientsWithSumOfOrdersBiggerThanSpecifiedSum_Result> ClientsWithSumOfOrdersBiggerThanSpecifiedSum(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<decimal> sum)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var sumParameter = sum.HasValue ?
                new ObjectParameter("Sum", sum) :
                new ObjectParameter("Sum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientsWithSumOfOrdersBiggerThanSpecifiedSum_Result>("ClientsWithSumOfOrdersBiggerThanSpecifiedSum", fromDateParameter, toDateParameter, sumParameter);
        }
    
        public virtual ObjectResult<ProductsWithMaxSumOfOrders_Result> ProductsWithMaxSumOfOrders(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductsWithMaxSumOfOrders_Result>("ProductsWithMaxSumOfOrders", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<TopTenSoldProducts_Result> TopTenSoldProducts(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TopTenSoldProducts_Result>("TopTenSoldProducts", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAllProductsByClient_Result> GetAllProductsByClient(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProductsByClient_Result>("GetAllProductsByClient", nameParameter);
        }
    
        public virtual ObjectResult<GetAllOrdersWithBiggerSum_Result> GetAllOrdersWithBiggerSum(Nullable<decimal> sum)
        {
            var sumParameter = sum.HasValue ?
                new ObjectParameter("Sum", sum) :
                new ObjectParameter("Sum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOrdersWithBiggerSum_Result>("GetAllOrdersWithBiggerSum", sumParameter);
        }
    
        public virtual ObjectResult<GetDetailedOrder_Result> GetDetailedOrder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDetailedOrder_Result>("GetDetailedOrder");
        }
    }
}
